{"version":3,"sources":["Redux/UsinaSlice.js","Redux/InvestidorSlice.js","Redux/store.js","Components/Navbar/Navbar.js","Components/Navbar/Sidebar/Sidebar.js","Components/Graficos/GraficoTemporal.js","Components/Investidores/InvestidoresLista.js","Components/Inputs/RadioButtons/RadioBtn.js","Utils/Validation.js","Components/Inputs/SearchInvestidores/SearchInvestidores.js","Components/Investidores/InvestidoresCard.js","Components/Forms/EditarOuCadastrarForm.js","Components/Investidores/InvestidoresPercentual.js","Components/Graficos/GraficoRendimentos.js","Components/Graficos/GraficoTempoXRendimento.js","Pages/Usinas/Usina.js","Pages/GerenciarInvestidores/GerenciarInvestidores.js","Pages/InvestidoresInformacao/InvestidoresMaisInfo.js","Pages/EditarInvestidores/EditarInvestidores.js","Pages/CadastrarInvestidor/CadastrarInvestidor.js","Pages/Rendimentos/Rendimentos.js","App.js","index.js"],"names":["dadosFormatado","tempo","tensao","corrente","potencia","temperatura","dadosUsina","map","item","push","tempo_h","tensao_V","corrente_A","potencia_kW","temperatura_C","initialState","dadosFormatados","variavelResposta","energiaNoDia","receitaTotal","rendimentos","rendimentosPorhora","usinaSlice","createSlice","name","reducers","setUpVariables","state","getVariavelSelecionada","action","payload","calcularEnergia","investidores","deltaT","potenciaPorHoraLista","i","length","kWh","hora","retorno","nome","rendimento","usina","percentual","actions","investidoresFormatados","dadosClients","id","numeroCliente","nomeCliente","telefone","Math","floor","random","email","substring","toLocaleLowerCase","endereco","color","toString","usinaId","usinas","percentualDeParticipacao","investidorSelecionado","filtroAtivo","investidoresFiltrados","investidorSlice","addInvestidor","valorParaBalancear","removerInvestidor","filter","setInvestidor","limparInvestidorSelecionado","updateInvestidor","antigoPercentual","novoPercentual","investidorUpdated","investidor","filtrarInvestidores","valorDeBusca","toLowerCase","includes","limparFiltro","store","configureStore","reducer","usinaInfo","UsinaReducer","InvestidorReducer","Navbar","displaySidebar","setSidebar","OnDisplaySidebar","className","onClick","onKeyDown","Sidebar","exact","to","style","textDecoration","activeClassName","GraficoTemporal","formatarTempo","data","Date","setUTCSeconds","toLocaleTimeString","hour","minute","hour12","formatarYlabel","ResponsiveContainer","width","height","AreaChart","dadosUsinas","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","domain","dataKey","tickFormatter","tick","fontSize","Label","value","position","YAxis","label","angle","CartesianGrid","strokeDasharray","Tooltip","labelFormatter","Area","type","stroke","fillOpacity","fill","displayList","toDisplay","individuo","index","ListItem","ListItemAvatar","Avatar","sx","bgcolor","getNameToAvatar","ListItemText","primary","Divider","variant","component","nameInitials","split","charAt","join","InvestidoresLista","List","maxWidth","RadioBtn","setVariavelSelecionada","onChange","event","target","option","validarNome","validator","error","msg","match","SearchInvestidores","handleProcurarInvestidor","handleRemoverFiltro","useState","errorMsg","setName","filters","setFilters","TextField","fullWidth","size","helperText","nameError","InputProps","startAdornment","InputAdornment","backgroundColor","Button","Chip","icon","FaTimes","onDelete","InvestidoresCard","aoDeletarInvestidor","setInvestidoParaEditar","open","setOpen","history","useHistory","handleClose","Card","minWidth","CardContent","Typography","parseInt","round","Number","EPSILON","formatPercentual","CardActions","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","EditarOuCadastrarForm","handleSave","valorInicial","valor","erro","erroMsg","setNome","setEmail","setEndereco","setTelefone","investimento","setInvestimento","useEffect","undefined","reduzirPercentual","novoValor","adiconarPercentual","handleInvestimento","nomeErro","validators","required","placeholder","defaultCountry","checkarErro","displayUpdatePorcentual","edicoes","pathname","openSnackbar","disabled","flag","checkPorErro","step","desabilitarSaveBtn","InvestidoresPercentual","props","Box","display","alignItems","mr","LinearProgress","border","formato","Intl","NumberFormat","currency","formatarValorParaReal","entry","format","GraficoRendimentos","BarChart","dy","Bar","formatter","GraficoTempoXRendimento","LineChart","Line","activeDot","r","Usina","dispatch","useDispatch","useSelector","input","Alert","React","forwardRef","ref","elevation","GerenciarInvestidores","openAlert","setOpenAlert","location","handleDeletarInvestidor","handleCloseAlert","reason","displayInvestidoresCards","Snackbar","autoHideDuration","severity","InvestidoresMaisInfo","startIcon","EditarInvestidores","CadastrarInvestidor","novoInvestidor","Rendimentos","toggleBtn","setToggleBtn","btnText","setBtnText","hoje","ontem","setDate","getDate","toLocaleString","year","month","day","items","j","temp","bblSort","App","showSideBar","setShowSideBar","isMobile","useMediaQuery","query","path","theme","createTheme","palette","main","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"q4fAGMA,EAAe,CACjBC,MAAM,GACNC,OAAO,GACPC,SAAS,GACTC,SAAS,GACTC,YAAY,IAGhBC,EAAWC,KAAI,SAACC,GACZR,EAAeC,MAAMQ,KAAKD,EAAKE,SAC/BV,EAAeE,OAAOO,KAAKD,EAAKG,UAChCX,EAAeG,SAASM,KAAKD,EAAKI,YAClCZ,EAAeI,SAASK,KAAKD,EAAKK,aAClCb,EAAeK,YAAYI,KAAKD,EAAKM,kBAGzC,IAAMC,EAAe,CACjBC,gBAAgBhB,EAChBiB,iBAAiB,cACjBC,aAAc,EACdC,aAAa,EACbC,YAAY,GACZC,mBAAmB,IAKjBC,EAAaC,YAAY,CAC3BC,KAAK,QACLT,eACAU,SAAS,CACLC,eAAe,SAACC,GACd,OAAOZ,GAETa,uBAAuB,SAACD,EAAME,GAC1BF,EAAMV,iBAAiBY,EAAOC,SAElCC,gBAAgB,SAACJ,EAAME,GAUnB,IATA,IAAM5B,EAAM0B,EAAMX,gBAAgBf,MAC5BG,EAAWuB,EAAMX,gBAAgBZ,SACjC4B,EAAcH,EAAOC,QACvBG,EAAO,EACPC,EAAqB,GAKjBC,EAAE,EAAGA,EAAElC,EAAMmC,OAAO,EAAGD,IAC5BF,EAAOhC,EAAMkC,EAAE,GAAGlC,EAAMkC,GAExBD,EAAqBzB,KAAK,CAACR,MAAMA,EAAMkC,GAAIE,IAAKJ,EAAO7B,EAAS+B,KAInED,EAAqB3B,KAAI,SAACC,GACtBmB,EAAMT,aAAaS,EAAMT,aAAaV,EAAK6B,OAI/CV,EAAMR,aAhBc,IAgBAQ,EAAMT,aAG1BS,EAAMN,mBAAoBa,EAAqB3B,KAAI,SAACC,GAChD,MAAO,CAAC8B,KAAK9B,EAAKP,MAAOsC,QApBT,IAoBiB/B,EAAK6B,QAI1CL,EAAazB,KAAI,SAAAC,GACbmB,EAAMP,YAAYX,KAAK,CAAC+B,KAAKhC,EAAKgC,KAAMC,WAAajC,EAAKkC,MAAMC,WAAWhB,EAAMR,aAAc,aAUxG,EAAgEG,EAAWsB,QAApElB,EAAP,EAAOA,eAAeE,EAAtB,EAAsBA,uBAAuBG,EAA7C,EAA6CA,gBACrCT,IAAf,Q,SC7EMuB,EAAyB,GAE/BC,EAAavC,KAAI,SAACC,GACdqC,EAAuBpC,KAAK,CACxBsC,GAAIvC,EAAKwC,cACTR,KAAMhC,EAAKyC,YACXC,SAAU,WAAaC,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,UAAqB,IAAMF,KAAKC,MAAM,IAAuB,IAAhBD,KAAKE,UAChGC,MAAO9C,EAAKyC,YAAYM,UAAU,EAAG,GAAGC,oBAAsB,aAC9DC,SAAU,kBAAoBN,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,eAChEK,MAAO,IAAMP,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBM,SAAS,IAC3DjB,MAAO,CACHkB,QAASpD,EAAKqD,OAAO,GAAGD,QACxBjB,WAAYnC,EAAKqD,OAAO,GAAGC,+BAKvC,IAAM/C,EAAe,CACjBiB,aAAca,EACdkB,sBAAuB,KACvBC,aAAa,EACbC,sBAAuB,MAGrBC,EAAkB3C,YAAY,CAChCC,KAAM,aACNT,eACAU,SAAU,CACN0C,cAAe,SAACxC,EAAOE,GAInB,IACMuC,EADcvC,EAAOC,QAAQY,MAAMC,WACChB,EAAMK,aAAaI,OAC7DT,EAAMK,aAAazB,KAAI,SAACC,GACpBA,EAAKkC,MAAMC,WAAcnC,EAAKkC,MAAMC,WAAayB,KAIrDzC,EAAMK,aAAavB,KAAKoB,EAAOC,UAGnCuC,kBAAmB,SAAC1C,EAAOE,GAGvB,IACMuC,EADcvC,EAAOC,QAAQY,MAAMC,YACEhB,EAAMK,aAAaI,OAAS,GACvET,EAAMK,aAAazB,KAAI,SAACC,GACpBA,EAAKkC,MAAMC,WAAcnC,EAAKkC,MAAMC,WAAayB,KAIrDzC,EAAMK,aAAeL,EAAMK,aAAasC,QAAO,SAAC9D,GAC5C,OAAOA,EAAKuC,KAAOlB,EAAOC,QAAQiB,MAIjCpB,EAAMqC,cACPrC,EAAMsC,sBAAuBtC,EAAMsC,sBAAsBK,QAAO,SAAC9D,GAC7D,OAAOA,EAAKuC,KAAOlB,EAAOC,QAAQiB,OAI1CpB,EAAMoC,sBAAwB,MAGlCQ,cAAe,SAAC5C,EAAOE,GACnBF,EAAMoC,sBAAwBlC,EAAOC,SAGzC0C,4BAA6B,SAAC7C,GAC1BA,EAAMoC,sBAAwB,MAGlCU,iBAAkB,SAAC9C,EAAOE,GACtB,IAAM6C,EAAmB/C,EAAMoC,sBAAsBrB,MAAMC,WACrDgC,EAAiB9C,EAAOC,QAAQY,MAAMC,WACtCiC,EAAoB/C,EAAOC,QAC3BiB,EAAKlB,EAAOC,QAAQiB,GAG1B,GAAI4B,EAAiBD,EAAkB,CAEnC,IACMN,GADcO,EAAiBD,IACM/C,EAAMK,aAAaI,OAAS,GACvET,EAAMK,aAAazB,KAAI,SAACC,GACpBA,EAAKkC,MAAMC,WAAcnC,EAAKkC,MAAMC,WAAayB,KAIzD,GAAIM,EAAmBC,EAAgB,CAEnC,IACMP,GADcM,EAAmBC,IACIhD,EAAMK,aAAaI,OAAS,GACvET,EAAMK,aAAazB,KAAI,SAACC,GACpBA,EAAKkC,MAAMC,WAAcnC,EAAKkC,MAAMC,WAAayB,KAKzDzC,EAAMK,aAAazB,KAAI,SAAAsE,GACfA,EAAW9B,KAAOA,IAClB8B,EAAWrC,KAAOoC,EAAkBpC,KACpCqC,EAAW3B,SAAW0B,EAAkB1B,SACxC2B,EAAWvB,MAAQsB,EAAkBtB,MACrCuB,EAAWpB,SAAWmB,EAAkBnB,SACxCoB,EAAWnC,MAAMC,WAAaiC,EAAkBlC,MAAMC,gBAQlEmC,oBAAqB,SAACnD,EAAOE,GACzB,IAAMkD,EAAelD,EAAOC,QAAQkD,cAEpCrD,EAAMsC,sBAAwBtC,EAAMK,aAAasC,QAAO,SAAAO,GACpD,OAAQA,EAAWrC,KAAKwC,cAAcC,SAASF,MAGnDpD,EAAMqC,aAAc,GAGxBkB,aAAc,SAACvD,GACXA,EAAMqC,aAAc,MAKzB,EAM6BE,EAAgBtB,QANrCuB,EAAR,EAAQA,cACXE,EADG,EACHA,kBACAE,EAFG,EAEHA,cACAE,EAHG,EAGHA,iBACAK,EAJG,EAIHA,oBACAI,EALG,EAKHA,aACAV,EANG,EAMHA,4BACWN,IAAf,QClIeiB,EAPDC,YAAe,CAC3BC,QAAS,CACLC,UAAWC,EACXV,WAAYW,K,0ECiBHC,MArBf,YAA+C,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,WAEvBC,EAAkB,WAEpBD,GAAYD,IAIhB,OACI,sBAAKG,UAAU,SAAf,UACKH,EAEG,cAAC,IAAD,CAASG,UAAU,cAAcC,QAASF,EAAmBG,UAAWH,IAExE,cAAC,IAAD,CAAQC,UAAU,cAAcC,QAASF,EAAmBG,UAAWH,IAE3E,4D,OCuBGI,MArCf,WAEI,OACI,qBAAKH,UAAU,UAAf,SACI,8BACI,qBAAIA,UAAU,eAAd,UACI,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,QAAWC,gBAAgB,mBAA1E,SACI,6BACI,gCACA,cAAC,IAAD,CAAeR,UAAU,iBACzB,gDAKR,cAAC,IAAD,CAASI,OAAK,EAACC,GAAG,eAAeC,MAAO,CAAEC,eAAgB,QAAUC,gBAAgB,mBAApF,SACI,6BACI,gCACA,cAAC,IAAD,CAAkBR,UAAU,iBAC5B,qDAIR,cAAC,IAAD,CAASI,OAAK,EAACC,GAAI,yBAA0BC,MAAO,CAAEC,eAAgB,QAAUC,gBAAgB,oBAAhG,SACI,6BACI,gCACA,cAAC,IAAD,CAAUR,UAAU,iBACpB,yE,8ECoCbS,MAhEf,YAAgD,IAArBrF,EAAoB,EAApBA,iBAEjBsF,EAAgB,SAACtG,GACnB,IAAMuG,EAAO,IAAIC,KAAK,KAAM,EAAG,GAE/B,OADAD,EAAKE,cAAsB,KAARzG,GACZuG,EAAKG,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAGpFC,EAAiB,WACnB,MAAyB,gBAArB9F,EACO,cAEc,aAArBA,EACO,YAEc,eAArBA,EACO,WAEc,kBAArBA,EACO,mBADX,GAMJ,OACI,qBAAK4E,UAAU,kBAAf,SACI,cAACmB,EAAA,EAAD,CAAqBC,MAAM,MAAMC,OAAO,MAAxC,SACI,eAACC,EAAA,EAAD,CAAWX,KAAMY,EACbC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IADpD,UAEI,+BACI,iCAAgB1E,GAAG,gBAAgB2E,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAA3D,UACI,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,SAG5D,cAACC,EAAA,EAAD,CAAOC,OAAQ,CAAC,OAAQ,QACpBC,QAAQ,UACRC,cAAe7B,EACf8B,KAAM,CAAEC,SAAU,IAHtB,SAII,cAACC,EAAA,EAAD,CAAOC,MAAM,QAAQC,SAAS,aAElC,cAACC,EAAA,EAAD,CACIL,KAAM,CAAEC,SAAU,IAClBK,MAAO,CAAEH,MAAOzB,IAAkB6B,OAAQ,GAAIH,SAAU,gBAC5D,cAACI,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAASC,eAAgB,SAAUR,GAC/B,MAAO,eAAcjC,EAAciC,MAIvC,cAACS,EAAA,EAAD,CAAMC,KAAK,WACLf,QAASlH,EACTO,KAAMuF,IACNoC,OAAO,UACPC,YAAa,EAAGC,KAAK,gC,uDCjDzCC,I,OAAc,SAACtH,GACjB,IAAIuH,EAAY,GAkChB,OA/BAvH,EAAazB,KAAI,SAACiJ,EAAWC,EAAZ,GAGTA,EAAQ,IAHmC,EAAbrH,OAI9BmH,EAAU9I,KACN,8BACI,eAACiJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,GAAI,CAAEC,QAASN,EAAU9F,OAAjC,SACKqG,GAAgBP,EAAUhH,UAEnC,cAACwH,EAAA,EAAD,CAAcC,QAAST,EAAUhH,aAI7C+G,EAAU9I,KACN,gCACI,eAACiJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,GAAI,CAAEC,QAASN,EAAU9F,OAAjC,SACKqG,GAAgBP,EAAUhH,UAEnC,cAACwH,EAAA,EAAD,CAAcC,QAAST,EAAUhH,UAErC,cAAC0H,GAAA,EAAD,CAASC,QAAQ,QAAQC,UAAU,cAO5Cb,IAKLQ,GAAkB,SAACvI,GACrB,IAAM6I,EAAe,GAOrB,OANoB7I,EAAK8I,MAAM,KAEnB/J,KAAI,SAAAiB,GACZ6I,EAAa5J,KAAKe,EAAK+I,OAAO,OAG3BF,EAAaG,KAAK,KAqBdC,OAlBf,YAA8C,IAAjBzI,EAAgB,EAAhBA,aACzB,OACI,sBAAK6D,UAAU,oBAAf,UACI,+CACA,cAAC6E,EAAA,EAAD,CACIb,GAAI,CACA5C,MAAO,MACP0D,SAAU,IACVb,QAAS,oBAJjB,SAOKR,GAAYtH,KAEjB,2B,OC5CG4I,OA3Bf,YAA+C,IAA3BC,EAA0B,EAA1BA,uBAchB,OACI,qBAAKhF,UAAU,aAAaiF,SANN,SAACC,GACvBF,EAAuBE,EAAMC,OAAOxC,QAKpC,SAdkB,CAAC,CAAEA,MAAO,WAAYyC,OAAQ,aACpD,CAAEzC,MAAO,aAAcyC,OAAQ,YAC/B,CAAEzC,MAAO,cAAeyC,OAAQ,eAChC,CAAEzC,MAAO,gBAAiByC,OAAQ,gBAYX1K,KAAI,SAAC0K,GAAD,OACf,wBAAOpF,UAAU,oBAAjB,UACI,uBAAOqD,KAAK,QAAQV,MAAOyC,EAAOzC,MAAOhH,KAAK,aAC9C,sBAAMqE,UAAU,oBAAhB,SAAqCoF,EAAOA,kB,SCtBnDC,GAAY,SAAC1J,GACtB,IAAI2J,EAAU,CAACC,OAAM,EAAOC,IAAI,IAY/B,OATI7J,IACA2J,EAAUC,OAAM,EAChBD,EAAUE,IAAI,wCAEd7J,EAAK8J,MAAM,mBACXH,EAAUC,OAAM,EAChBD,EAAUE,IAAM,yBAGbF,G,+CCsDGI,OAzDf,YAAgF,IAAlDC,EAAiD,EAAjDA,yBAA0BC,EAAuB,EAAvBA,oBACpD,EAAwBC,mBAAS,CAAElD,MAAO,GAAI4C,OAAO,EAAOO,SAAU,KAAtE,mBAAOnK,EAAP,KAAaoK,EAAb,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OACI,sBAAKjG,UAAU,qBAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,cAACkG,GAAA,EAAD,CACIC,WAAS,EACTC,KAAK,QACLlJ,GAAG,4BACHyF,MAAOhH,EAAKgH,MACZ4C,MAAO5J,EAAK4J,MACZc,WAAY1K,EAAKmK,SACjBb,SA/BG,SAACC,GAChB,IAAMoB,EAAYjB,GAAYH,EAAMC,OAAOxC,OAC3CoD,EAAQ,CAAEpD,MAAOuC,EAAMC,OAAOxC,MAAO4C,MAAOe,EAAUf,MAAOO,SAAUQ,EAAUd,OA8BrEe,WAAY,CACRC,eACI,cAACC,GAAA,EAAD,CAAgB7D,SAAS,QAAzB,SACI,cAAC,IAAD,OAIZ0B,QAAQ,WACRN,GAAI,CAAC0C,gBAAgB,WAEzB,cAACC,GAAA,EAAD,CAAQrC,QAAQ,YAAYzG,MAAM,UAAUmG,GAAI,CAAE3C,OAAQ,QAAUpB,QArC/D,WACRtE,EAAKgH,MAGAhH,EAAK4J,OACXI,EAAyBhK,EAAKgH,OAH9BoD,EAAQ,6BAAKpK,GAAN,IAAY4J,OAAO,EAAMO,SAAU,8BAM9CG,EAAWtK,EAAKgH,QA6BR,2BAEHqD,GAAY,gCAAK,cAACY,GAAA,EAAD,CACNC,KAAMC,IACNhE,MAAOkD,EACPe,SA/BC,WACjBnB,IACAK,EAAW,MACXF,EAAQ,CAAEpD,MAAO,GAAI4C,OAAO,EAAOO,SAAU,QAyB5B,W,0FCzCnB5B,I,OAAkB,SAACvI,GACrB,IAAM6I,EAAe,GAOrB,OANoB7I,EAAK8I,MAAM,KAEnB/J,KAAI,SAAAiB,GACZ6I,EAAa5J,KAAKe,EAAK+I,OAAO,OAG3BF,EAAaG,KAAK,MA+EdqC,OA3Ef,YAAqF,IAA1DhI,EAAyD,EAAzDA,WAAYiI,EAA6C,EAA7CA,oBAAoBC,EAAyB,EAAzBA,uBACvD,EAAwBrB,oBAAS,GAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KACIC,EAAUC,cAsBRC,EAAc,WAChBH,GAAQ,IAQZ,OACI,gCACI,eAACI,GAAA,EAAD,CAAMxH,UAAU,mBAAmBgE,GAAI,CAAEyD,SAAU,KAAnD,UACI,eAACC,GAAA,EAAD,CAAa1H,UAAU,0BAAvB,UACI,eAAC+D,EAAA,EAAD,CAAQC,GAAI,CAAE5C,MAAO,GAAIC,OAAQ,GAAI4C,QAAQjF,EAAWnB,OAAxD,UACKqG,GAAgBlF,EAAWrC,MADhC,OAEC,sBAAKqD,UAAU,uBAAf,UACD,eAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,mBACWvF,EAAWrC,QAEtB,eAACgL,GAAA,EAAD,CAAYrD,QAAQ,QAApB,2BAfQ,WACpB,IAAMxH,EAAa8K,SAAS5I,EAAWnC,MAAMC,YAC7C,OAAOQ,KAAKuK,MAAsC,KAA/B/K,EAAagL,OAAOC,UAAkB,IAc1BC,GADnB,aAKJ,eAACC,GAAA,EAAD,CAAajI,UAAU,0BAAvB,UACI,cAAC2G,GAAA,EAAD,CAASP,KAAK,QAAQnG,QA7Cf,WACnBiH,EAAuBlI,GACvBqI,EAAQzM,KAAK,0BA2CD,sBACA,gCACA,cAAC,IAAD,CAAOoF,UAAU,wBAAwBC,QA1C5B,WACzBiH,EAAuBlI,GACvBqI,EAAQzM,KAAK,0BAyCD,cAAC,IAAD,CAAYoF,UAAU,wBAAwBC,QAtC/B,WAC3BmH,GAAQ,eAyCJ,eAACc,GAAA,EAAD,CAAQf,KAAMA,EAAMgB,QAASZ,EAAa,kBAAgB,qBACtD,mBAAiB,2BADrB,UAEI,cAACa,GAAA,EAAD,CAAalL,GAAG,qBAAhB,SACK,iCAEL,cAACmL,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBpL,GAAG,2BAAtB,oDAIJ,eAACqL,GAAA,EAAD,WACI,cAAC5B,GAAA,EAAD,CAAQ1G,QAASsH,EAAjB,2BACA,cAACZ,GAAA,EAAD,CAAQ1G,QAjDH,WACjBmH,GAAQ,GACRH,EAAoBjI,GACpBqI,EAAQzM,KAAK,2BA8C8B4N,WAAS,EAAxC,2B,kCCsHLC,OA1Mf,YAAgF,IAA/CC,EAA8C,EAA9CA,WAAY1J,EAAkC,EAAlCA,WAAW4G,EAAuB,EAAvBA,oBAC9C+C,EAAe,CAAEC,MAAO,GAAIC,MAAM,EAAOC,QAAS,KACxD,EAAwBjD,mBAAS8C,GAAjC,mBAAOhM,EAAP,KAAaoM,EAAb,KACA,EAA0BlD,mBAAS8C,GAAnC,mBAAOlL,EAAP,KAAcuL,EAAd,KACA,EAAgCnD,mBAAS8C,GAAzC,mBAAO/K,EAAP,KAAiBqL,EAAjB,KACA,EAAgCpD,qBAAhC,mBAAOxI,EAAP,KAAiB6L,EAAjB,KACA,EAAwCrD,qBAAxC,mBAAOsD,EAAP,KAAqBC,EAArB,KACI/B,EAAUC,cAId+B,qBAAU,gBAEaC,IAAftK,IACA+J,EAAQ,6BAAKpM,GAAN,IAAYiM,MAAO5J,EAAWrC,QACrCqM,EAAS,6BAAKvL,GAAN,IAAamL,MAAO5J,EAAWvB,SACvCwL,EAAY,6BAAKrL,GAAN,IAAgBgL,MAAO5J,EAAWpB,YAC7CsL,EAAYlK,EAAW3B,UACvB+L,EAAgBpK,EAAWnC,MAAMC,eAEtC,IAGH,IAAMyM,EAAoB,WACtB,IAAMC,EAAY5B,SAASuB,GAAgB,EAC3CC,EAAgBI,IAGdC,EAAqB,WACvB,IAAMD,EAAY5B,SAASuB,GAAgB,EAC3CC,EAAgBI,IAgEdE,EAAqB,SAACxE,GACxBkE,EAAgBlE,EAAMC,OAAOxC,QA8CjC,OACI,sBAAK3C,UAAU,wBAAf,UACI,cAACkG,GAAA,EAAD,CAAWC,WAAS,EAChBjJ,GAAG,iBACH4F,MAAM,OACNwB,QAAQ,WACR3B,MAAOhG,EAAKiM,MACZrD,MAAO5I,EAAKkM,KACZxC,WAAY1J,EAAKmM,QACjB7D,SAvEO,SAACC,GAChB,IAAMyE,EAAWC,GAAuB1E,EAAMC,OAAOxC,OACrDoG,EAAQ,CAAEH,MAAO1D,EAAMC,OAAOxC,MAAOkG,KAAMc,EAASpE,MAAOuD,QAASa,EAASnE,OAsErEqE,UAAQ,IAEZ,qBAAK7J,UAAU,6BAAf,SACI,cAAC,KAAD,CACI8J,YAAY,WACZC,eAAe,KACfpH,MAAOtF,EACP4H,SAAUiE,MAGlB,cAAChD,GAAA,EAAD,CAAWC,WAAS,EAChBjJ,GAAG,iBACH4F,MAAM,SACNwB,QAAQ,WACR3B,MAAOlF,EAAMmL,MACbrD,MAAO9H,EAAMoL,KACbxC,WAAY5I,EAAMqL,QAClB7D,SApFQ,SAACC,GACjB,IAAM8E,EHlFe,SAACvM,GAC1B,IAAI6H,EAAU,CAACC,OAAM,EAAOC,IAAI,IAKhC,OAJK/H,EAAMgI,MAAM,6JACbH,EAAUC,OAAM,EAChBD,EAAUE,IAAI,8BAEXF,EG4EiBsE,CAAwB1E,EAAMC,OAAOxC,OACzDqG,EAAS,CAAEJ,MAAO1D,EAAMC,OAAOxC,MAAOkG,KAAMmB,EAAYzE,MAAOuD,QAASkB,EAAYxE,OAmF5EqE,UAAQ,IAEZ,cAAC3D,GAAA,EAAD,CAAWC,WAAS,EAChBjJ,GAAG,iBACH4F,MAAM,cACNwB,QAAQ,WACR3B,MAAO/E,EAASgL,MAChBrD,MAAO3H,EAASiL,KAChBxC,WAAYzI,EAASkL,QACrB7D,SAzFW,SAACC,GACpB,IAAM8E,EH9EgB,SAACpM,GAC3B,IAAI0H,EAAU,CAACC,OAAM,EAAOC,IAAI,IAMhC,OAJI5H,EAAS6H,MAAM,qBACfH,EAAUC,OAAM,EAChBD,EAAUE,IAAI,sCAEXF,EGuEiBsE,CAA2B1E,EAAMC,OAAOxC,OAC5DsG,EAAY,CAAEL,MAAO1D,EAAMC,OAAOxC,MAAOkG,KAAMmB,EAAYzE,MAAOuD,QAASkB,EAAYxE,OAwF/EqE,UAAQ,IAEZ,sBAAK7J,UAAU,6BAAf,UACI,cAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAMP,GAAI,CAAEnG,MAAO,WAAzD,6CAnIoB,WAC5B,IAAM6F,EAAY,GAwBlB,YAvBmB4F,IAAftK,EACA0E,EAAU9I,KAAK,qBAAKqK,SAAUyE,EAAf,SACX,eAAC/B,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAMP,GAAI,CAAEnG,MAAO,IAAzD,UACI,+EACA,kCAAO,uBAAOwF,KAAK,QAAQV,MAAM,IAAIhH,KAAK,aAA1C,IAAwD,yCACxD,kCAAO,uBAAO0H,KAAK,QAAQV,MAAM,KAAKhH,KAAK,aAA3C,IAAyD,0CACzD,kCAAO,uBAAO0H,KAAK,QAAQV,MAAM,KAAKhH,KAAK,aAA3C,IAAyD,gDAKjE+H,EAAU9I,KACN,sBAAKoF,UAAU,wCAAf,UACI,uDACA,gCACI,cAAC,KAAD,CAAOC,QAASwJ,EAAoBzJ,UAAU,+BAC9C,uCAAUmJ,EAAV,QACA,cAAC,KAAD,CAAUlJ,QAASsJ,EAAmBvJ,UAAU,sCAMzD0D,EA6GEuG,MAGL,sBAAKjK,UAAU,2BAAf,UAEI,cAAC2G,GAAA,EAAD,CAAQrC,QAAQ,WAAW6B,WAAS,EAAClG,QArDhC,WACboH,EAAQzM,KAAK,2BAoDL,wBACA,cAAC+L,GAAA,EAAD,CAAQrC,QAAQ,YAAY6B,WAAS,EAAClG,QA7FnC,WAEX,QAAmBqJ,IAAftK,EAA0B,CAC1B,IAAMA,EAAa,CACf9B,GAAI,IAAI0D,KACRjE,KAAMA,EAAKiM,MACXvL,SAAUA,EACVI,MAAOA,EAAMmL,MACbhL,SAAUA,EAASgL,MACnB/K,MAAO,IAAMP,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBM,SAAS,IAC3DjB,MAAO,CACHK,GAAI,EACJJ,WAAYqM,IAGpBT,EAAW1J,OAER,CAEH,IAAMkL,EAAU,CACZhN,GAAI8B,EAAW9B,GACfP,KAAMA,EAAKiM,MACXvL,SAAUA,EACVI,MAAOA,EAAMmL,MACbhL,SAAUA,EAASgL,MACnB/L,MAAO,CACHK,GAAI,EACJJ,WAAYqM,IAIpBT,EAAWwB,GACXtE,IAGJyB,EAAQzM,KAAK,CAAEuP,SAAU,yBAA0BrO,MAAO,CAAEsO,cAAc,MA0DXC,SA9JxC,WAIvB,IAHA,IAAIC,GAAO,EACLC,EAAe,CAAC5N,EAAMc,EAAOG,GAE1B4M,EAAO,EAAGA,EAAOD,EAAahO,OAAQiO,IAAQ,CACnD,GAAID,EAAaC,GAAM3B,KACnB,OAAc,EAElB,IAAK0B,EAAaC,GAAM3B,OAAS0B,EAAaC,GAAM5B,MAChD,OAAc,EAGtB,OAAKvL,IAAa8L,GAGXmB,EA+IkEG,GAAjE,6B,2BCnKDC,OAlCf,YAAmD,IAAjBvO,EAAgB,EAAhBA,aAC9B,OAEI,sBAAK6D,UAAU,yBAAf,UACI,+DACC7D,EAAazB,KAAI,SAACsE,GAEf,IAAM2L,EAAQ,CAAEhI,MAAO3D,EAAWnC,MAAMC,YACxC,OACI,sBAAKkD,UAAU,6BAAf,UACI,cAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQzG,MAAM,iBAAlC,SAAoDmB,EAAWrC,OAC/D,eAACiO,GAAA,EAAD,CAAK5G,GAAI,CAAE6G,QAAS,OAAQC,WAAY,SAAU1J,MAAO,SAAzD,UACI,cAACwJ,GAAA,EAAD,CAAK5G,GAAI,CAAE5C,MAAO,OAAQ2J,GAAI,GAA9B,SACI,cAACC,GAAA,EAAD,2BAAgB1G,QAAQ,eAAkBqG,GAA1C,IAAiD3G,GAAI,CACjD3C,OAAQ,OAAQqF,gBAAiB,QAASuE,OAAQ,qCAG1D,cAACL,GAAA,EAAD,CAAK5G,GAAI,CAAEyD,SAAU,IAArB,SACI,cAACE,GAAA,EAAD,CAAYrD,QAAQ,QAAQzG,MAAM,iBAAlC,mBAAuDP,KAAKuK,MACxD8C,EAAMhI,OADV,sB,6BCpB1BuI,GAAU,IAAIC,KAAKC,aAAa,QAAS,CAC3C9K,MAAO,WACP+K,SAAU,QAIRC,GAAwB,SAACC,GAC3B,OAAOL,GAAQM,OAAOD,IAiCXE,OA7Bf,YAAuC,IAAT9K,EAAQ,EAARA,KAC1B,OACI,qBAAKX,UAAU,qBAAf,SACI,cAACmB,EAAA,EAAD,CAAqBC,MAAM,MAAMC,OAAO,OAAxC,SACI,eAACqK,GAAA,EAAD,CACI/K,KAAMA,EACNa,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IANhB,UAQI,cAACQ,EAAA,EAAD,CAAOE,QAAQ,OAAf,SACI,cAACI,EAAA,EAAD,CAAOC,MAAM,eAAeC,SAAS,aAGzC,cAACC,EAAA,EAAD,CAAOL,KAAM,CAAEC,SAAU,IACrBK,MAAO,CAAEH,MAAO,sBAAuBI,OAAQ,GAAIH,SAAU,OAAQ+I,IAAK,IAC1EpJ,cAAe+I,GACfrJ,OAAQ,KAGZ,cAAC2J,GAAA,EAAD,CAAKtJ,QAAQ,aAAakB,KAAK,UAAUV,MAAO,CAAEF,SAAU,MAAOiJ,UAAWP,c,oBClC5F5K,I,OAAgB,SAACtG,GACnB,IAAMuG,EAAO,IAAIC,KAAK,KAAM,EAAG,GAE/B,OADAD,EAAKE,cAAsB,KAARzG,GACZuG,EAAKG,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,MAGpFiK,GAAU,IAAIC,KAAKC,aAAa,QAAS,CAC3C9K,MAAO,WACP+K,SAAU,QAIRC,GAAwB,SAACC,GAC3B,OAAOL,GAAQM,OAAOD,IA8CXO,OAzCf,YAA4C,IAATnL,EAAQ,EAARA,KAE/B,OACI,qBAAKX,UAAU,0BAAf,SACI,cAACmB,EAAA,EAAD,CAAqBC,MAAM,MAAMC,OAAO,MAAxC,SACI,eAAC0K,GAAA,EAAD,CACIpL,KAAMA,EACNa,OAAQ,CACJC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IANhB,UASI,cAACQ,EAAA,EAAD,CACIC,OAAQ,CAAC,OAAQ,QACjBE,cAAe7B,GACf8B,KAAM,CAAEC,SAAU,IAClBH,QAAQ,OAJZ,SAMI,cAACI,EAAA,EAAD,CAAOC,MAAM,QAAQC,SAAS,aAIlC,cAACC,EAAA,EAAD,CACIC,MAAO,CAAEH,MAAO,qBAAsBI,OAAQ,GAAIH,SAAU,OAAQ+I,IAAK,IACzEpJ,cAAe+I,GACf9I,KAAM,CAAEC,SAAU,MACtB,cAACS,EAAA,EAAD,CAAS2I,UAAW,SAAUlJ,GAC1B,OAAO2I,GAAsB3I,IAE7BQ,eAAgB,SAAUR,GACtB,MAAO,eAAcjC,GAAciC,MAE3C,cAACqJ,GAAA,EAAD,CAAM3I,KAAK,WAAWf,QAAQ,UAAU3G,KAAK,aAAa2H,OAAO,UAAU2I,UAAW,CAAEC,EAAG,a,OChBhGC,OAhCf,WACI,IAAMC,EAAWC,cACVjR,EAAoBkR,aAAY,SAACxQ,GAAD,OAAWA,EAAM2D,aAAjDrE,iBACCe,EAAgBmQ,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAA7C7C,aAWR,OATAkN,qBAAU,WACN+C,EAASvQ,OACV,IAQC,sBAAKmE,UAAU,QAAf,UACI,sBAAKA,UAAU,cAAf,UACI,kEACA,6EAEJ,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,CAAiB5E,iBAAkBA,IACnC,cAAC,GAAD,CAAU4J,uBAbI,SAACuH,GAC3BH,EAASrQ,EAAuBwQ,OAapB,2EAEJ,cAAC,GAAD,CAAmBpQ,aAAcA,W,8BCxB3CqQ,I,OAAQC,IAAMC,YAAW,SAAe/B,EAAOgC,GACjD,OAAO,cAAC,KAAD,cAAUC,UAAW,EAAGD,IAAKA,EAAKrI,QAAQ,UAAaqG,QA+FnDkC,OA3Ff,SAA+BlC,GAC3B,MAAkC9E,oBAAS,GAA3C,mBAAOiH,EAAP,KAAkBC,EAAlB,KACMX,EAAWC,cACjB,EAA6DC,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAAlF7C,EAAR,EAAQA,aAAciC,EAAtB,EAAsBA,sBAAuBD,EAA7C,EAA6CA,YAEzCkJ,EAAUC,cAEd+B,qBAAU,WAGFsB,EAAMqC,SAASlR,OACX6O,EAAMqC,SAASlR,MAAMsO,cACrB2C,GAAa,GAMrBX,EAASzN,OACV,IAEH,IAQMsO,EAA0B,SAACjO,GAC7BoN,EAAS5N,EAAkBQ,KAGzBkI,EAAyB,SAAClI,GAC5BoN,EAAS1N,EAAcM,KAGrBkO,EAAmB,SAAChI,EAAOiI,GACd,cAAXA,GAGJJ,GAAa,IA6BjB,OACI,sBAAK/M,UAAU,wBAAf,UACI,cAAC,GAAD,CAAoB2F,yBAnDK,SAAChJ,GAC9ByP,EAASnN,EAAoBtC,KAkD+CiJ,oBA3BtD,WACtBwG,EAAS/M,QA2BL,qBAAKW,UAAU,kCAAf,SACI,oBAAGC,QAjDc,WACzBoH,EAAQzM,KAAK,yBAgDL,UACA,cAAC,KAAD,IADA,4BAGJ,qBAAKoF,UAAU,4BAAf,SA7ByB,WAC7B,IAAI0D,EAAY,GAkBhB,OAhBIvF,EACAC,EAAsB1D,KAAI,SAACC,GACvB+I,EAAU9I,KAAK,cAAC,GAAD,CAAkBoE,WAAYrE,EACzCsM,oBAAqBgG,EACrB/F,uBAAwBA,QAIhCxD,EAAU9I,KAAKuB,EAAazB,KAAI,SAACC,GAAD,OAC5B,cAAC,GAAD,CAAkBqE,WAAYrE,EAC1BsM,oBAAqBgG,EACrB/F,uBAAwBA,QAK7BxD,EAWE0J,KAIL,cAACC,GAAA,EAAD,CAAUlG,KAAM2F,EAAWQ,iBAAkB,IAAMnF,QAAS+E,EAA5D,SACI,cAAC,GAAD,CAAO/E,QAAS+E,EAAkBK,SAAS,UAAUvJ,GAAI,CAAE5C,MAAO,QAAlE,wDCnFV8C,I,OAAkB,SAACvI,GACrB,IAAM6I,EAAe,GAOrB,OANoB7I,EAAK8I,MAAM,KAEnB/J,KAAI,SAAAiB,GACZ6I,EAAa5J,KAAKe,EAAK+I,OAAO,OAG3BF,EAAaG,KAAK,MA8Fd6I,OA1Ff,WACI,MAAwB3H,oBAAS,GAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KACMgF,EAAWC,cACTnO,EAA0BoO,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAAvDd,sBACJmJ,EAAUC,cAgBRC,EAAc,WAChBH,GAAQ,IAMZ,OACI,sBAAKpH,UAAU,uBAAf,UACI,sBAAKA,UAAU,6BAA6BC,QALjC,WACfoH,EAAQzM,KAAK,2BAIT,UAAmE,cAAC,IAAD,IAAnE,aACA,sBAAKoF,UAAU,2BAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,cAAC+D,EAAA,EAAD,CAAQC,GAAI,CAAE5C,MAAO,GAAIC,OAAQ,GAAI4C,QAAS/F,EAAsBL,OAApE,SACKqG,GAAgBhG,EAAsBvB,QAE3C,cAACgK,GAAA,EAAD,CAAQrC,QAAQ,WAAW6B,WAAS,EAACsH,UAAW,cAAC,IAAD,IAAWxN,QA7B5C,WAC3BoH,EAAQzM,KAAK,wBA4BD,sBACA,cAAC+L,GAAA,EAAD,CAAQrC,QAAQ,WAAW6B,WAAS,EAACsH,UAAW,cAAC,IAAD,IAAgBxN,QA1BhD,WAC5BmH,GAAQ,IAyBI,0BAEJ,sBAAKpH,UAAU,2BAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,eAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,mBACWrG,EAAsBvB,QAEjC,eAACgL,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,qBACarG,EAAsBT,SAEnC,eAACkK,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,kBACUrG,EAAsBb,YAEhC,eAACsK,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,0BACerG,EAAsBN,eAGzC,sBAAKoC,UAAU,4BAAf,UACI,cAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAMP,GAAI,CAAEnG,MAAO,YAAzD,oBAGA,cAAC8J,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,+BAGA,cAACoD,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,kEAGA,eAACoD,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAtC,+CACiCrG,EAAsBrB,MAAMC,WAD7D,gBAQZ,eAACoL,GAAA,EAAD,CAAQf,KAAMA,EAAMgB,QAASZ,EAAa,kBAAgB,qBACtD,mBAAiB,2BADrB,UAEI,cAACa,GAAA,EAAD,CAAalL,GAAG,qBAAhB,SACK,iCAEL,cAACmL,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBpL,GAAG,2BAAtB,oDAIJ,eAACqL,GAAA,EAAD,WACI,cAAC5B,GAAA,EAAD,CAAQ1G,QAASsH,EAAjB,2BACA,cAACZ,GAAA,EAAD,CAAQ1G,QApEH,WACjBmH,GAAQ,GACRgF,EAAS5N,EAAkBN,IAC3BmJ,EAAQzM,KAAK,2BAiE8B4N,WAAS,EAAxC,2B,OC/ELkF,OAvBf,WACI,IAAMtB,EAAWC,cACVnO,EAAyBoO,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAAtDd,sBAUP,OACI,sBAAK8B,UAAU,qBAAf,UACK,cAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAMP,GAAI,CAACnG,MAAM,WAAvD,sDAED,cAAC,GAAD,CAAyB6K,WAZJ,SAACc,GAC1B4C,EAASxN,EAAiB4K,KAYExK,WAAYd,EACZ0H,oBAVJ,WACxBwG,EAAS/M,Y,iBCQFsO,OAlBf,WACI,IAAMvB,EAAWC,cACjB,EAAWC,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAOxC,OAPA,gBAQI,sBAAKgB,UAAU,sBAAf,UACI,cAAC2H,GAAA,EAAD,CAAYrD,QAAQ,QAAQC,UAAU,MAAMP,GAAI,CAACnG,MAAM,WAAvD,uCAEA,cAAC,GAAD,CAAuB6K,WARJ,SAACkF,GACxBxB,EAAS9N,EAAcsP,W,gBCiFhBC,OAtFf,WACI,IAAMzB,EAAWC,cACTlQ,EAAgBmQ,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAA7C7C,aACR,EAAsDmQ,aAAY,SAACxQ,GAAD,OAAWA,EAAM2D,aAA5ElE,EAAP,EAAOA,YAAYD,EAAnB,EAAmBA,aAAaE,EAAhC,EAAgCA,mBAChC,EAAkCqK,oBAAS,GAA3C,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAA+BlI,mBAAS,2BAAxC,mBAAOmI,EAAP,KAAgBC,EAAhB,KAEA5E,qBAAU,WACN+C,EAASvQ,KACTuQ,EAASlQ,EAAgBC,MAC1B,IAEH,IAYMmP,EAAwB,IAAIH,KAAKC,aAAa,QAAS,CACzD9K,MAAO,WACP+K,SAAU,QAIR6C,EAAO,IAAItN,KACXuN,EAAQ,IAAIvN,KA2BlB,OA1BAuN,EAAMC,QAAQF,EAAKG,UAAU,GA2BzB,sBAAKrO,UAAU,cAAf,UACG,sBAAMA,UAAU,oBAAhB,UACK,yDAAyBmO,EAAMG,eAAe,QA5BpC,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YA4BjD,QACA,6BAAKnD,EAAsBE,OAAOlQ,QAEtC,sBAAK0E,UAAU,kBAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,cAAC,GAAD,CAAwB7D,aA9BzB,WAEX,IADA,IAAMuS,EAAK,aAAMvS,GACTG,EAAI,EAAGA,EAAIoS,EAAMnS,OAAQD,IAG/B,IAAI,IAAIqS,EAAI,EAAGA,EAAMD,EAAMnS,OAASD,EAAG,EAAKqS,IAG1C,GAAGD,EAAMC,GAAG9R,MAAMC,WAAa4R,EAAMC,EAAE,GAAG9R,MAAMC,WAAW,CAGzD,IAAI8R,EAAOF,EAAMC,GACjBD,EAAMC,GAAID,EAAMC,EAAE,GAClBD,EAAMC,EAAE,GAAKC,EAInB,OAAOF,EAa2CG,OAE1C,sBAAK7O,UAAU,sBAAf,UACA,qBAAKA,UAAU,iBAAf,SACJ,cAAC2G,GAAA,EAAD,CAAQrC,QAAQ,YAAYrE,QA1DlB,WACd8N,GAAcD,GAKVG,EAHAH,EAGW,gCAFA,4BAsDX,SAAmDE,MAE1CF,EACI,cAAC,GAAD,CAAoBnN,KAAMpF,IAC1B,cAAC,GAAD,CAAyBoF,KAAMnF,c,OCbzCsT,OArDf,WACE,IAAQ5Q,EAA0BoO,aAAY,SAACxQ,GAAD,OAAWA,EAAMkD,cAAvDd,sBACR,EAAsC2H,oBAAS,GAA/C,mBAAOkJ,EAAP,KAAoBC,EAApB,KACMC,EAAWC,wBAAc,CAAEC,MAAO,uBAEpCtP,EAAiB,KAiBrB,OAfAwJ,qBAAU,WACH4F,GACHD,GAAe,KAEhB,CAACC,IAEAA,GAAYF,EACdlP,EAAiB,cAAC,EAAD,IAEToP,IACRpP,EAAiB,cAAC,EAAD,KAMjB,qBAAKG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQH,eAAgBkP,EAAajP,WAAYkP,IACjD,sBAAKhP,UAAU,eAAf,UAEGH,EACD,qBAAKG,UAAU,aAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACgP,KAAK,IAAI7K,UAAW4H,KACjC,cAAC,IAAD,CAAO/L,OAAK,EAACgP,KAAK,eAAe7K,UAAWsJ,KAC5C,cAAC,IAAD,CAAOzN,OAAK,EAACgP,KAAK,yBAAyB7K,UAAWsI,KACtD,cAAC,IAAD,CAAOzM,OAAK,EAACgP,KAAK,uBAAuB7K,UAAWoJ,KACnDzP,GAEC,gCACE,cAAC,IAAD,CAAOkC,OAAK,EAACgP,KAAK,wBAAwB7K,UAAWiJ,KACrD,cAAC,IAAD,CAAOpN,OAAK,EAACgP,KAAK,sBAAsB7K,UAAWmJ,QAGvD,cAAC,IAAD,CAAOnJ,UAAW4H,mB,oBChD1BkD,GAAQC,aAAY,CACxBC,QAAS,CACPnL,QAAS,CACLoL,KAAM,cAIdC,IAASC,OACP,cAAC,IAAD,CAAUpQ,MAAOA,EAAjB,SACE,cAACqQ,GAAA,EAAD,CAAeN,MAAOA,GAAtB,SACG,cAAC,GAAD,QAGLO,SAASC,eAAe,W","file":"static/js/main.dfeb128d.chunk.js","sourcesContent":["import { createSlice} from '@reduxjs/toolkit';\r\nimport dadosUsina from '../Utils/dadosUsina.json';\r\n\r\nconst dadosFormatado={\r\n    tempo:[],\r\n    tensao:[] ,\r\n    corrente:[],\r\n    potencia:[],\r\n    temperatura:[]\r\n   }\r\n\r\ndadosUsina.map((item)=>{\r\n    dadosFormatado.tempo.push(item.tempo_h)\r\n    dadosFormatado.tensao.push(item.tensao_V)\r\n    dadosFormatado.corrente.push(item.corrente_A)\r\n    dadosFormatado.potencia.push(item.potencia_kW)\r\n    dadosFormatado.temperatura.push(item.temperatura_C)\r\n})\r\n\r\nconst initialState = {\r\n    dadosFormatados:dadosFormatado,\r\n    variavelResposta:'potencia_kW',\r\n    energiaNoDia: 0,\r\n    receitaTotal:0,\r\n    rendimentos:[],\r\n    rendimentosPorhora:[],\r\n \r\n};\r\n\r\n\r\nconst usinaSlice = createSlice({\r\n    name:'usina',\r\n    initialState,\r\n    reducers:{\r\n        setUpVariables:(state)=>{\r\n          return initialState\r\n        },\r\n        getVariavelSelecionada:(state,action)=>{\r\n            state.variavelResposta=action.payload\r\n        },\r\n        calcularEnergia:(state,action)=>{\r\n            const tempo=state.dadosFormatados.tempo;\r\n            const potencia = state.dadosFormatados.potencia;\r\n            const investidores= action.payload\r\n            let deltaT=0;\r\n            let potenciaPorHoraLista=[]\r\n            const valorPorKwh = 0.95;\r\n            \r\n\r\n            // calcular a energia para cada dois momentos no tempo\r\n            for(let i=0; i<tempo.length-1; i++){\r\n               deltaT=tempo[i+1]-tempo[i]\r\n\r\n               potenciaPorHoraLista.push({tempo:tempo[i], kWh:(deltaT*potencia[i])})\r\n            }\r\n\r\n            // calcular a energia total gerada no dia\r\n            potenciaPorHoraLista.map((item)=>{\r\n                state.energiaNoDia=state.energiaNoDia+item.kWh\r\n            })\r\n\r\n            // calcular o retorno financeiro total\r\n            state.receitaTotal= state.energiaNoDia * valorPorKwh; \r\n\r\n            //calcular retorno financeiro por periodo no tempo\r\n            state.rendimentosPorhora= potenciaPorHoraLista.map((item)=>{\r\n                return {hora:item.tempo, retorno:item.kWh*valorPorKwh}\r\n            })\r\n\r\n            //calcular retorno financeito por investidor\r\n            investidores.map(item =>{\r\n                state.rendimentos.push({nome:item.nome, rendimento: (item.usina.percentual*state.receitaTotal)/100})\r\n             })\r\n\r\n            \r\n        },\r\n       \r\n        \r\n    }\r\n})\r\n\r\nexport const {setUpVariables,getVariavelSelecionada,calcularEnergia} = usinaSlice.actions\r\nexport default usinaSlice.reducer; ","import { createSlice } from '@reduxjs/toolkit';\r\nimport dadosClients from '../Utils/dadosClientes.json';\r\n\r\n//para formatar as informacoes does clientes\r\n// Assim posso inserir novos campos sem editar a dase de dados original \r\nconst investidoresFormatados = []\r\n\r\ndadosClients.map((item) => {\r\n    investidoresFormatados.push({\r\n        id: item.numeroCliente,\r\n        nome: item.nomeCliente,\r\n        telefone: '+55(51) ' + Math.floor(9000 + Math.random() * 100000) + '-' + Math.floor(1000 + Math.random() * 1000),\r\n        email: item.nomeCliente.substring(0, 2).toLocaleLowerCase() + '@gmail.com',\r\n        endereco: 'Ave. Principal ' + Math.floor(Math.random() * 100) + ', Canoas, RS',\r\n        color: '#' + Math.floor(Math.random() * 16777215).toString(16), //avatar color\r\n        usina: {\r\n            usinaId: item.usinas[0].usinaId,\r\n            percentual: item.usinas[0].percentualDeParticipacao\r\n        }\r\n    })\r\n})\r\n\r\nconst initialState = {\r\n    investidores: investidoresFormatados,\r\n    investidorSelecionado: null,\r\n    filtroAtivo: false,\r\n    investidoresFiltrados: null,\r\n}\r\n\r\nconst investidorSlice = createSlice({\r\n    name: 'investidor',\r\n    initialState,\r\n    reducers: {\r\n        addInvestidor: (state, action) => {\r\n\r\n            //rebalancear percentual da usian\r\n            //Ao add novo investidor, o percentual de todos os investidores sera reduzido proporcionalmente\r\n            const percentagem = action.payload.usina.percentual\r\n            const valorParaBalancear = (percentagem / state.investidores.length)\r\n            state.investidores.map((item) => {\r\n                item.usina.percentual = (item.usina.percentual - valorParaBalancear)\r\n            })\r\n\r\n            // add novo investidor\r\n            state.investidores.push(action.payload)\r\n        },\r\n\r\n        removerInvestidor: (state, action) => {\r\n            // rebalancear percentual\r\n            //Ao remover investidor, o percentual de todos os investidores sera aumentado proporcionalmente\r\n            const percentagem = action.payload.usina.percentual\r\n            const valorParaBalancear = (percentagem / (state.investidores.length - 1))\r\n            state.investidores.map((item) => {\r\n                item.usina.percentual = (item.usina.percentual + valorParaBalancear)\r\n            })\r\n\r\n            //remove item\r\n            state.investidores = state.investidores.filter((item) => {\r\n                return item.id !== action.payload.id\r\n            })\r\n\r\n              // remove item se estiver com filtro ativo\r\n              if(state.filtroAtivo){\r\n                state.investidoresFiltrados= state.investidoresFiltrados.filter((item)=>{\r\n                    return item.id !== action.payload.id\r\n                 })\r\n            }\r\n            // // Limpar investidor selecionado\r\n            state.investidorSelecionado = null\r\n        },\r\n\r\n        setInvestidor: (state, action) => {\r\n            state.investidorSelecionado = action.payload\r\n        },\r\n\r\n        limparInvestidorSelecionado: (state) => {\r\n            state.investidorSelecionado = null;\r\n        },\r\n\r\n        updateInvestidor: (state, action) => {\r\n            const antigoPercentual = state.investidorSelecionado.usina.percentual\r\n            const novoPercentual = action.payload.usina.percentual\r\n            const investidorUpdated = action.payload\r\n            const id = action.payload.id\r\n\r\n\r\n            if (novoPercentual > antigoPercentual) {\r\n                //remove percentual dos outros investidores pq o cliente desejou aumentar seus investimentos\r\n                const percentagem = novoPercentual - antigoPercentual\r\n                const valorParaBalancear = (percentagem / (state.investidores.length - 1))\r\n                state.investidores.map((item) => {\r\n                    item.usina.percentual = (item.usina.percentual - valorParaBalancear)\r\n                })\r\n\r\n            }\r\n            if (antigoPercentual > novoPercentual) {\r\n                // add percentual dos outros investidores pq o cliente desejou reduzir seus investimentos\r\n                const percentagem = antigoPercentual - novoPercentual;\r\n                const valorParaBalancear = (percentagem / (state.investidores.length - 1))\r\n                state.investidores.map((item) => {\r\n                    item.usina.percentual = (item.usina.percentual + valorParaBalancear)\r\n                })\r\n            }\r\n\r\n            // salvar as altercoes do investidor editado\r\n            state.investidores.map(investidor => {\r\n                if (investidor.id === id) {\r\n                    investidor.nome = investidorUpdated.nome;\r\n                    investidor.telefone = investidorUpdated.telefone;\r\n                    investidor.email = investidorUpdated.email;\r\n                    investidor.endereco = investidorUpdated.endereco;\r\n                    investidor.usina.percentual = investidorUpdated.usina.percentual;\r\n                }\r\n            })\r\n\r\n            // // Limpar investidor selecionado\r\n            // state.investidorSelecionado=null\r\n        },\r\n\r\n        filtrarInvestidores: (state, action) => {\r\n            const valorDeBusca = action.payload.toLowerCase();\r\n\r\n            state.investidoresFiltrados = state.investidores.filter(investidor => {\r\n                return (investidor.nome.toLowerCase().includes(valorDeBusca))\r\n            })\r\n\r\n            state.filtroAtivo = true;\r\n        },\r\n\r\n        limparFiltro: (state) => {\r\n            state.filtroAtivo = false;\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addInvestidor,\r\n    removerInvestidor,\r\n    setInvestidor,\r\n    updateInvestidor,\r\n    filtrarInvestidores,\r\n    limparFiltro,\r\n    limparInvestidorSelecionado } = investidorSlice.actions\r\nexport default investidorSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport UsinaReducer from './UsinaSlice';\r\nimport InvestidorReducer from './InvestidorSlice';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n      usinaInfo: UsinaReducer,\r\n      investidor: InvestidorReducer\r\n  },\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport {FaBars, FaTimes} from 'react-icons/fa'\r\nimport './Navbar.scss';\r\n\r\nfunction Navbar({displaySidebar, setSidebar}) {\r\n\r\n    const OnDisplaySidebar =()=>{\r\n\r\n        setSidebar(!displaySidebar);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='navbar'>\r\n            {displaySidebar \r\n                ?\r\n                <FaTimes className=\"navbarIcons\" onClick={OnDisplaySidebar } onKeyDown={OnDisplaySidebar }/>\r\n                :\r\n                <FaBars className=\"navbarIcons\" onClick={OnDisplaySidebar } onKeyDown={OnDisplaySidebar }/>\r\n        } \r\n            <div>Energia Compartilhada</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\nimport {FaSolarPanel, FaHandHoldingUsd, FaFolder} from 'react-icons/fa';\r\nimport './Sidebar.scss'; \r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <nav>\r\n                <ul className=\"sidebarItems\">\r\n                    <NavLink exact to='/' style={{ textDecoration: 'none' }}  activeClassName=\"sidebarActiveTab\">\r\n                        <li>\r\n                            <div>\r\n                            <FaSolarPanel  className=\"sideBarIcons\"/>\r\n                            <div>Usina </div>\r\n                            </div>\r\n                        </li>\r\n                    </NavLink>\r\n\r\n                    <NavLink exact to='/rendimentos' style={{ textDecoration: 'none' }} activeClassName=\"sidebarActiveTab\">\r\n                        <li>\r\n                            <div>\r\n                            <FaHandHoldingUsd className=\"sideBarIcons\"/>\r\n                            <div>Rendimentos</div>\r\n                            </div>\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink exact to={'/gerenciarInvestidores'} style={{ textDecoration: 'none' }} activeClassName=\"sidebarActiveTab \">\r\n                        <li>\r\n                            <div>\r\n                            <FaFolder className=\"sideBarIcons\"/>\r\n                            <div> Gerenciar Investidores</div>\r\n                            </div>\r\n                        </li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport dadosUsinas from '../../Utils/dadosUsina.json'\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Label } from 'recharts';\r\nimport './GraficoTemporal.scss'\r\n\r\nfunction GraficoTemporal({ variavelResposta }) {\r\n\r\n    const formatarTempo = (tempo) => {\r\n        const data = new Date(2021, 1, 1);\r\n        data.setUTCSeconds(tempo * 3600);\r\n        return data.toLocaleTimeString('pt-BR', { hour: 'numeric', minute: 'numeric', hour12: false })\r\n    }\r\n\r\n    const formatarYlabel = () => {\r\n        if (variavelResposta === 'potencia_kW') {\r\n            return 'Potência'\r\n        }\r\n        if (variavelResposta === 'tensao_V') {\r\n            return 'Tensão'\r\n        }\r\n        if (variavelResposta === 'corrente_A') {\r\n            return 'Corrente'\r\n        }\r\n        if (variavelResposta === 'temperatura_C') {\r\n            return 'Temperatura'\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"graficoTemporal\">\r\n            <ResponsiveContainer width=\"90%\" height=\"95%\">\r\n                <AreaChart data={dadosUsinas}\r\n                    margin={{ top: 10, right: 10, left: 10, bottom: 20 }}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorVariavel\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <XAxis domain={['auto', 'auto']}\r\n                        dataKey=\"tempo_h\"\r\n                        tickFormatter={formatarTempo}\r\n                        tick={{ fontSize: 12 }}>\r\n                        <Label value=\"Horas\" position=\"bottom\" />\r\n                    </XAxis>\r\n                    <YAxis\r\n                        tick={{ fontSize: 12 }}\r\n                        label={{ value: formatarYlabel(), angle: -90, position: 'insideLeft' }} />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip labelFormatter={function (value) {\r\n                        return 'Horário: ' + formatarTempo(value)\r\n                    }}/>\r\n\r\n\r\n                    <Area type=\"monotone\" \r\n                          dataKey={variavelResposta} \r\n                          name={formatarYlabel()} \r\n                          stroke=\"#8884d8\" \r\n                          fillOpacity={1} fill=\"url(#colorVariavel)\"\r\n                          />\r\n                   \r\n\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraficoTemporal\r\n","import React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport './InvestidoresLista.scss'\r\n\r\n\r\nconst displayList = (investidores) => {\r\n    let toDisplay = []\r\n\r\n\r\n    investidores.map((individuo, index, { length }) => {\r\n\r\n        //if else implementado para nao inserir o Divider no ultimo item\r\n        if (index + 1 === length) {\r\n            toDisplay.push(\r\n                <div>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar sx={{ bgcolor: individuo.color }}>\r\n                                {getNameToAvatar(individuo.nome)}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={individuo.nome} />\r\n                    </ListItem>\r\n                </div>)\r\n        } else {\r\n            toDisplay.push(\r\n                <div>\r\n                    <ListItem>\r\n                        <ListItemAvatar >\r\n                            <Avatar sx={{ bgcolor: individuo.color }}>\r\n                                {getNameToAvatar(individuo.nome)}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={individuo.nome} />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </div>)\r\n        }\r\n\r\n\r\n    })\r\n\r\n    return toDisplay;\r\n\r\n\r\n}\r\n\r\nconst getNameToAvatar = (name) => {\r\n    const nameInitials = []\r\n    const nameSlipted = name.split(' ')\r\n\r\n    nameSlipted.map(name => {\r\n        nameInitials.push(name.charAt(0))\r\n    })\r\n\r\n    return nameInitials.join('')\r\n\r\n}\r\nfunction InvestidoresLista({ investidores }) {\r\n    return (\r\n        <div className=\"investidoresLista\">\r\n            <h4>Investidores:</h4>\r\n            <List\r\n                sx={{\r\n                    width: '90%',\r\n                    maxWidth: 360,\r\n                    bgcolor: 'background.paper',\r\n                }}\r\n            >\r\n                {displayList(investidores)}\r\n            </List>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestidoresLista\r\n","import React from 'react';\r\nimport './RadioBtn.scss';\r\n\r\nfunction RadioBtn({ setVariavelSelecionada }) {\r\n    const selectOptions = [{ value: 'tensao_V', option: 'Tensão' },\r\n    { value: 'corrente_A', option: 'Corrente' },\r\n    { value: 'potencia_kW', option: 'Potência' },\r\n    { value: 'temperatura_C', option: 'Temperatura' },\r\n    ]\r\n\r\n\r\n\r\n    const handleRadioChange = (event) => {\r\n        setVariavelSelecionada(event.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"radionBtns\" onChange={handleRadioChange}>\r\n            {selectOptions.map((option) => (\r\n                <label className=\"radioBtnContainer\">\r\n                    <input type=\"radio\" value={option.value} name=\"variavel\" />\r\n                    <span className=\"radioBtnCheckmark\">{option.option}</span>\r\n                </label>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBtn\r\n","export const validarNome=(name)=>{\r\n    let validator={error:false, msg:''}\r\n \r\n   \r\n     if(!name){\r\n         validator.error=true\r\n         validator.msg='Campo de busca não pode ser vazio'\r\n     }\r\n     if(!name.match(/^[a-zA-Z\\s]*$/)){\r\n         validator.error=true\r\n         validator.msg = 'Digite somente letras'\r\n     }\r\n \r\n     return validator\r\n }\r\n\r\n export const validarEmail = (email)=>{\r\n    let validator={error:false, msg:''}\r\n    if (!email.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)){\r\n        validator.error=true\r\n        validator.msg='Digite um e-mail válido'\r\n    }\r\n    return validator\r\n}\r\n\r\nexport const validarEndereco =(endereco)=>{\r\n    let validator={error:false, msg:''}\r\n\r\n    if(!endereco.match(/^[a-zA-Z\\s\\d]*$/)){\r\n        validator.error=true\r\n        validator.msg='Insira somente números e letras'\r\n    }\r\n    return validator\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { validarNome } from '../../../Utils/Validation';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Chip from '@mui/material/Chip';\r\nimport { FaSearch, FaTimes} from 'react-icons/fa';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport './SearchInvestidores.scss'\r\n\r\nfunction SearchInvestidores({ handleProcurarInvestidor, handleRemoverFiltro }) {\r\n    const [name, setName] = useState({ value: '', error: false, errorMsg: '' })\r\n    const [filters, setFilters] = useState(null)\r\n\r\n    const handleName = (event) => {\r\n        const nameError = validarNome(event.target.value);\r\n        setName({ value: event.target.value, error: nameError.error, errorMsg: nameError.msg })\r\n    }\r\n\r\n    const onSearch = () => {\r\n        if (!name.value) {\r\n            setName({ ...name, error: true, errorMsg: 'Entre um nome para busca' })\r\n        }\r\n        else if (!name.error) {\r\n            handleProcurarInvestidor(name.value);\r\n        }\r\n\r\n        setFilters(name.value)\r\n    }\r\n\r\n    const limparFiltro = () => {\r\n        handleRemoverFiltro()\r\n        setFilters(null)\r\n        setName({ value: '', error: false, errorMsg: '' })\r\n    }\r\n    return (\r\n        <div className=\"searchInvestidores\">\r\n            <div className=\"searchInvestioresSearchBar\">\r\n                <TextField\r\n                    fullWidth\r\n                    size='small'\r\n                    id=\"input-with-icon-textfield\"\r\n                    value={name.value}\r\n                    error={name.error}\r\n                    helperText={name.errorMsg}\r\n                    onChange={handleName}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\" >\r\n                                <FaSearch />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    sx={{backgroundColor:'white'}} />\r\n\r\n                <Button variant=\"contained\" color=\"success\" sx={{ height: '100%' }} onClick={onSearch}> Procurar </Button>\r\n            </div>\r\n            {filters &&  <div><Chip\r\n                        icon={FaTimes}\r\n                        label={filters}\r\n                        onDelete={limparFiltro}\r\n            /> </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInvestidores\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport {FaPen,FaTrashAlt } from 'react-icons/fa';\r\nimport './InvestidoresCard.scss';\r\n\r\n\r\nconst getNameToAvatar = (name) => {\r\n    const nameInitials = []\r\n    const nameSlipted = name.split(' ')\r\n\r\n    nameSlipted.map(name => {\r\n        nameInitials.push(name.charAt(0))\r\n    })\r\n\r\n    return nameInitials.join('')\r\n\r\n}\r\n\r\nfunction InvestidoresCard({investidor, aoDeletarInvestidor,setInvestidoParaEditar}) {\r\n    const [open, setOpen] = useState(false);\r\n    let history = useHistory()\r\n\r\n    const handleVerMaisBtn=()=>{\r\n        setInvestidoParaEditar(investidor);\r\n        history.push('/investidorInformacao');\r\n    }\r\n\r\n    const handleEditarInvestidor=()=>{\r\n        setInvestidoParaEditar(investidor);\r\n        history.push('/editarInvestidores');\r\n    }\r\n\r\n    const handleDeletarInvestidor =()=>{\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    const handleAgreed = () => {\r\n        setOpen(false);\r\n        aoDeletarInvestidor(investidor)\r\n        history.push('/gerenciarInvestidores')\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatPercentual =()=>{\r\n        const percentual = parseInt(investidor.usina.percentual)\r\n        return Math.round((percentual + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"investidoresCard\" sx={{ minWidth: 275 }}>\r\n                <CardContent className=\"investidoresCardContent\">\r\n                    <Avatar sx={{ width: 56, height: 56, bgcolor:investidor.color }} >\r\n                        {getNameToAvatar(investidor.nome)} </Avatar>\r\n                     <div className=\"investidoresCardInfo\">  \r\n                    <Typography variant=\"body1\" component=\"div\">\r\n                        Nome: {investidor.nome}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        Participacao: {formatPercentual()}%\r\n                    </Typography>\r\n                    </div>\r\n                </CardContent>\r\n                <CardActions className=\"investidoresCardActions\">\r\n                    <Button  size=\"small\" onClick={handleVerMaisBtn}>Ver mais</Button>\r\n                    <div>\r\n                    <FaPen className=\"investidoresCardIcons\" onClick={handleEditarInvestidor}/>\r\n                    <FaTrashAlt className=\"investidoresCardIcons\" onClick={handleDeletarInvestidor} />\r\n                    </div>\r\n                </CardActions>\r\n            </Card>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Confirmação de deletar'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Deseja realmente excluir investidor?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>MELHOR NÃO</Button>\r\n                    <Button onClick={handleAgreed} autoFocus>SIM</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestidoresCard\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as validators from '../../Utils/Validation';\r\nimport TextField from '@mui/material/TextField';\r\nimport PhoneInput from 'react-phone-number-input';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { IoAdd, IoRemove } from \"react-icons/io5\";\r\nimport 'react-phone-number-input/style.css';\r\nimport './EditarOuCadastrarForm.scss';\r\n\r\n\r\n\r\nfunction EditarOuCadastrarForm({ handleSave, investidor,handleRemoverFiltro }) {\r\n    const valorInicial = { valor: '', erro: false, erroMsg: ' ' };\r\n    const [nome, setNome] = useState(valorInicial);\r\n    const [email, setEmail] = useState(valorInicial);\r\n    const [endereco, setEndereco] = useState(valorInicial);\r\n    const [telefone, setTelefone] = useState();\r\n    const [investimento, setInvestimento] = useState();\r\n    let history = useHistory();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //Se um investidor eh passado para o componente, entao esse investidor sera editado. \r\n        if (investidor !== undefined) {\r\n            setNome({ ...nome, valor: investidor.nome })\r\n            setEmail({ ...email, valor: investidor.email })\r\n            setEndereco({ ...endereco, valor: investidor.endereco })\r\n            setTelefone(investidor.telefone)\r\n            setInvestimento(investidor.usina.percentual)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const reduzirPercentual = () => {\r\n        const novoValor = parseInt(investimento) - 1;\r\n        setInvestimento(novoValor)\r\n    }\r\n\r\n    const adiconarPercentual = () => {\r\n        const novoValor = parseInt(investimento) + 1;\r\n        setInvestimento(novoValor)\r\n    }\r\n\r\n    const desabilitarSaveBtn = () => {\r\n        let flag = false\r\n        const checkPorErro = [nome, email, endereco]\r\n\r\n        for (let step = 0; step < checkPorErro.length; step++) {\r\n            if (checkPorErro[step].erro) {\r\n                return flag = true;\r\n            }\r\n            if (!checkPorErro[step].erro && !checkPorErro[step].valor) {\r\n                return flag = true;\r\n            }\r\n        }\r\n        if (!telefone || !investimento) {\r\n            return flag = true\r\n        }\r\n        return flag\r\n    }\r\n\r\n    const displayUpdatePorcentual = () => {\r\n        const toDisplay = []\r\n        if (investidor === undefined) {\r\n            toDisplay.push(<div onChange={handleInvestimento}>\r\n                <Typography variant=\"body2\" component=\"div\" sx={{ color: '' }}>\r\n                    <label>Proporção do investimento desejada: </label>\r\n                    <label><input type=\"radio\" value=\"5\" name=\"searchBy\" /> <span>5%</span></label>\r\n                    <label><input type=\"radio\" value=\"10\" name=\"searchBy\" /> <span>10%</span></label>\r\n                    <label><input type=\"radio\" value=\"20\" name=\"searchBy\" /> <span>20%</span></label>\r\n                </Typography>\r\n            </div>)\r\n\r\n        } else {\r\n            toDisplay.push(\r\n                <div className=\"editarOuCadastrarFormUpdatePercentual\">\r\n                    <label>Percentual atual: </label>\r\n                    <div>\r\n                        <IoAdd onClick={adiconarPercentual} className=\"editarOuCadastrarFormIcons\" />\r\n                        <label>  {investimento}% </label>\r\n                        <IoRemove onClick={reduzirPercentual} className=\"editarOuCadastrarFormIcons\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return toDisplay;\r\n    }\r\n\r\n    const handleNome = (event) => {\r\n        const nomeErro = validators.validarNome(event.target.value);\r\n        setNome({ valor: event.target.value, erro: nomeErro.error, erroMsg: nomeErro.msg })\r\n    }\r\n\r\n    const handleEmail = (event) => {\r\n        const checkarErro = validators.validarEmail(event.target.value)\r\n        setEmail({ valor: event.target.value, erro: checkarErro.error, erroMsg: checkarErro.msg })\r\n    }\r\n\r\n    const handleEndereco = (event) => {\r\n        const checkarErro = validators.validarEndereco(event.target.value)\r\n        setEndereco({ valor: event.target.value, erro: checkarErro.error, erroMsg: checkarErro.msg })\r\n    }\r\n\r\n    const handleInvestimento = (event) => {\r\n        setInvestimento(event.target.value)\r\n    }\r\n\r\n    const onSave = () => {\r\n        // novo cadastro\r\n        if (investidor === undefined) {\r\n            const investidor = {\r\n                id: new Date(),\r\n                nome: nome.valor,\r\n                telefone: telefone,\r\n                email: email.valor,\r\n                endereco: endereco.valor,\r\n                color: '#' + Math.floor(Math.random() * 16777215).toString(16),\r\n                usina: {\r\n                    id: 1,\r\n                    percentual: investimento\r\n                }\r\n            }\r\n            handleSave(investidor)\r\n\r\n        } else {\r\n            //atializar cadastro\r\n            const edicoes = {\r\n                id: investidor.id,\r\n                nome: nome.valor,\r\n                telefone: telefone,\r\n                email: email.valor,\r\n                endereco: endereco.valor,\r\n                usina: {\r\n                    id: 1,\r\n                    percentual: investimento\r\n                }\r\n            }\r\n\r\n            handleSave(edicoes);\r\n            handleRemoverFiltro(); // caso o filtro esteja ativo\r\n        }\r\n\r\n        history.push({ pathname: '/gerenciarInvestidores', state: { openSnackbar: true } });\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push('/gerenciarInvestidores')\r\n    }\r\n\r\n    return (\r\n        <div className=\"editarOuCadastrarForm\">\r\n            <TextField fullWidth\r\n                id=\"outlined-basic\"\r\n                label=\"Nome\"\r\n                variant=\"outlined\"\r\n                value={nome.valor}\r\n                error={nome.erro}\r\n                helperText={nome.erroMsg}\r\n                onChange={handleNome}\r\n                required />\r\n\r\n            <div className=\"editarOuCadastrarFormPhone\">\r\n                <PhoneInput\r\n                    placeholder=\"Telefone\"\r\n                    defaultCountry='BR'\r\n                    value={telefone}\r\n                    onChange={setTelefone} />\r\n            </div>\r\n\r\n            <TextField fullWidth\r\n                id=\"outlined-basic\"\r\n                label=\"e-mail\"\r\n                variant=\"outlined\"\r\n                value={email.valor}\r\n                error={email.erro}\r\n                helperText={email.erroMsg}\r\n                onChange={handleEmail}\r\n                required />\r\n\r\n            <TextField fullWidth\r\n                id=\"outlined-basic\"\r\n                label=\"Endereço\"\r\n                variant=\"outlined\"\r\n                value={endereco.valor}\r\n                error={endereco.erro}\r\n                helperText={endereco.erroMsg}\r\n                onChange={handleEndereco}\r\n                required />\r\n\r\n            <div className=\"editarOuCadastrarFormUsina\" >\r\n                <Typography variant=\"body2\" component=\"div\" sx={{ color: '#7F8E9D' }}>\r\n                    Usina fotovoltaica: Souto Maior</Typography>\r\n\r\n                {displayUpdatePorcentual()}\r\n            </div>\r\n\r\n            <div className=\"editarOuCadastrarFormBtn\">\r\n\r\n                <Button variant=\"outlined\" fullWidth onClick={onCancel}> Cancelar </Button>\r\n                <Button variant=\"contained\" fullWidth onClick={onSave} disabled={desabilitarSaveBtn()}> Salvar </Button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default EditarOuCadastrarForm\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Box from '@mui/material/Box';\r\nimport './InvestidoresPercentual.scss';\r\n\r\n\r\nfunction InvestidoresPercentual({ investidores }) {\r\n    return (\r\n\r\n        <div className=\"investidoresPercentual\">\r\n            <h5>Percentual de cada investidor</h5>\r\n            {investidores.map((investidor) => {\r\n\r\n                const props = { value: investidor.usina.percentual };\r\n                return (\r\n                    <div className=\"investidoresPercentualInfo\">\r\n                        <Typography variant=\"body1\" color=\"text.secondary\">{investidor.nome}</Typography>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', width: '100% ' }}>\r\n                            <Box sx={{ width: '100%', mr: 1 }}>\r\n                                <LinearProgress variant=\"determinate\" {...props} sx={{\r\n                                    height: '1rem', backgroundColor: 'white', border: '1px solid rgb(199, 187, 187)'\r\n                                }} />\r\n                            </Box>\r\n                            <Box sx={{ minWidth: 35 }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n                                    props.value,\r\n                                )}%`}</Typography>\r\n                            </Box>\r\n                        </Box>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default InvestidoresPercentual\r\n","import React from 'react';\r\nimport './GraficoRendimentos.scss'\r\n\r\nimport { BarChart, Bar, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\n\r\nconst formato = new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n\r\n});\r\n\r\nconst formatarValorParaReal = (entry) => {\r\n    return formato.format(entry)\r\n\r\n}\r\n\r\nfunction GraficoRendimentos({ data }) {\r\n    return (\r\n        <div className=\"graficoRendimentos\">\r\n            <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n                <BarChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 15,\r\n                        right: 10,\r\n                        left: 10,\r\n                        bottom: 20,\r\n                    }}>\r\n                    <XAxis dataKey=\"nome\">\r\n                        <Label value=\"Investidores\" position=\"bottom\" />\r\n                    </XAxis>\r\n\r\n                    <YAxis tick={{ fontSize: 12 }}\r\n                        label={{ value: 'Rendimento em reais', angle: -90, position: 'left', dy: -50 }}\r\n                        tickFormatter={formatarValorParaReal}\r\n                        offset={15}\r\n\r\n                    />\r\n                    <Bar dataKey=\"rendimento\" fill=\"#718355\" label={{ position: 'top', formatter: formatarValorParaReal }} />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraficoRendimentos\r\n\r\n","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Label, ResponsiveContainer } from 'recharts';\r\nimport './GraficoTempoXRendimento.scss';\r\n\r\nconst formatarTempo = (tempo) => {\r\n    const data = new Date(2021, 1, 1);\r\n    data.setUTCSeconds(tempo * 3600);\r\n    return data.toLocaleTimeString('pt-BR', { hour: 'numeric', minute: 'numeric', hour12: false })\r\n}\r\n\r\nconst formato = new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n\r\n});\r\n\r\nconst formatarValorParaReal = (entry) => {\r\n    return formato.format(entry)\r\n\r\n}\r\n\r\n\r\nfunction GraficoTempoXRendimento({ data }) {\r\n\r\n    return (\r\n        <div className=\"GraficoTempoXRendimento\">\r\n            <ResponsiveContainer width=\"90%\" height=\"90%\">\r\n                <LineChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 5,\r\n                        right: 10,\r\n                        left: 10,\r\n                        bottom: 20,\r\n                    }}\r\n                >\r\n                    <XAxis\r\n                        domain={['auto', 'auto']}\r\n                        tickFormatter={formatarTempo}\r\n                        tick={{ fontSize: 12 }}\r\n                        dataKey=\"hora\">\r\n\r\n                        <Label value=\"Horas\" position=\"bottom\" />\r\n\r\n                    </XAxis>\r\n\r\n                    <YAxis\r\n                        label={{ value: 'Rendimento em real', angle: -90, position: 'left', dy: -50 }}\r\n                        tickFormatter={formatarValorParaReal}\r\n                        tick={{ fontSize: 12 }} />\r\n                    <Tooltip formatter={function (value) {\r\n                        return formatarValorParaReal(value);\r\n                    }}\r\n                        labelFormatter={function (value) {\r\n                            return 'Horário: ' + formatarTempo(value)\r\n                        }} />\r\n                    <Line type=\"monotone\" dataKey=\"retorno\" name=\"Rendimento\" stroke=\"#1b5e20\" activeDot={{ r: 8 }} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraficoTempoXRendimento\r\n","import React, { useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport{setUpVariables, getVariavelSelecionada} from '../../Redux'\r\nimport { GraficoTemporal } from '../../Components';\r\nimport { InvestidoresLista,RadioBtn } from '../../Components';\r\nimport './Usinas.scss'\r\n\r\n\r\nfunction Usina() {\r\n    const dispatch = useDispatch();\r\n    const {variavelResposta} = useSelector((state) => state.usinaInfo)\r\n    const { investidores} = useSelector((state) => state.investidor)\r\n\r\n    useEffect(() => {\r\n        dispatch(setUpVariables())\r\n    }, [])\r\n\r\n\r\n    const setVariavelSelecionada =(input)=>{\r\n        dispatch(getVariavelSelecionada(input))\r\n    }\r\n\r\n    return (\r\n        <div className=\"usina\">\r\n            <div className=\"usinaHeader\">\r\n                <h2>Usina fotovoltaica - Souto Maior</h2>\r\n                <div>Ave. Palmares 123, São Francisco, RS</div>\r\n            </div>\r\n            <div className=\"usinaBoby\">\r\n                <div className=\"usinaGraph\">\r\n                    <GraficoTemporal variavelResposta={variavelResposta} />\r\n                    <RadioBtn setVariavelSelecionada={setVariavelSelecionada} />\r\n                    <p>Selecione qual variavel deseja explorar</p>\r\n                </div>\r\n                <InvestidoresLista investidores={investidores}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Usina\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removerInvestidor, setInvestidor, filtrarInvestidores,limparFiltro,limparInvestidorSelecionado } from '../../Redux';\r\nimport { InvestidoresCard, SearchInvestidores } from '../../Components';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport {FiPlus} from \"react-icons/fi\";\r\nimport './GerenciarInvestidores.scss';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nfunction GerenciarInvestidores(props) {\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { investidores, investidoresFiltrados, filtroAtivo } = useSelector((state) => state.investidor)\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        // Abrir snackbar se o props for passado\r\n        // o props sera passado so se os dados forem atualizados ou novo cadastro realizado com sucesso\r\n        if (props.location.state) {\r\n            if (props.location.state.openSnackbar) {\r\n                setOpenAlert(true)\r\n            }\r\n\r\n        }\r\n       \r\n        // para reset investidor selecionado, caso tenha um\r\n        dispatch(limparInvestidorSelecionado());\r\n    }, [])\r\n\r\n    const handleProcurarInvestidor = (nome) => {\r\n        dispatch(filtrarInvestidores(nome))\r\n    }\r\n\r\n    const handleNovoInvestidor = () => {\r\n        history.push('/cadastrarInvestidor');\r\n    }\r\n\r\n    const handleDeletarInvestidor = (investidor) => {\r\n        dispatch(removerInvestidor(investidor))\r\n    }\r\n\r\n    const setInvestidoParaEditar = (investidor) => {\r\n        dispatch(setInvestidor(investidor))\r\n    }\r\n\r\n    const handleCloseAlert = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenAlert(false);\r\n        //props.location.state.openSnackbar(false);\r\n    };\r\n\r\n    const handleRemoverFiltro=()=>{\r\n        dispatch(limparFiltro())\r\n    }\r\n    const displayInvestidoresCards = () => {\r\n        let toDisplay = []\r\n\r\n        if (filtroAtivo) {\r\n            investidoresFiltrados.map((item) => {\r\n                toDisplay.push(<InvestidoresCard investidor={item}\r\n                    aoDeletarInvestidor={handleDeletarInvestidor}\r\n                    setInvestidoParaEditar={setInvestidoParaEditar}\r\n                />);\r\n            })\r\n        } else {\r\n            toDisplay.push(investidores.map((item) =>\r\n                <InvestidoresCard investidor={item}\r\n                    aoDeletarInvestidor={handleDeletarInvestidor}\r\n                    setInvestidoParaEditar={setInvestidoParaEditar}\r\n                />\r\n            ));\r\n        }\r\n\r\n        return toDisplay;\r\n    }\r\n\r\n    return (\r\n        <div className=\"gerenciarInvestidores\">\r\n            <SearchInvestidores handleProcurarInvestidor={handleProcurarInvestidor} handleRemoverFiltro={handleRemoverFiltro} />\r\n            <div className=\"gerenciarInvestidoresNovoInvest\">\r\n                <p onClick={handleNovoInvestidor}> \r\n                <FiPlus/>Adicionar investidor</p>\r\n            </div>\r\n            <div className=\"gerenciarInvestidoresCard\">\r\n                {displayInvestidoresCards()}\r\n\r\n            </div>\r\n            {/**Snackbar ira abrir somente depois que um cliente for editado ou cadastrado */}\r\n            <Snackbar open={openAlert} autoHideDuration={6000} onClose={handleCloseAlert}>\r\n                <Alert onClose={handleCloseAlert} severity=\"success\" sx={{ width: '100%' }}>\r\n                    informções salvas com sucesso!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GerenciarInvestidores\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removerInvestidor } from '../../Redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { FaPen, FaTrashAlt,FaArrowLeft } from 'react-icons/fa';\r\nimport './InvestidoresMaisInfo.scss';\r\n\r\nconst getNameToAvatar = (name) => {\r\n    const nameInitials = []\r\n    const nameSlipted = name.split(' ')\r\n\r\n    nameSlipted.map(name => {\r\n        nameInitials.push(name.charAt(0))\r\n    })\r\n\r\n    return nameInitials.join('')\r\n\r\n}\r\n\r\nfunction InvestidoresMaisInfo() {\r\n    const [open, setOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { investidorSelecionado } = useSelector((state) => state.investidor)\r\n    let history = useHistory()\r\n\r\n    const handleEditarInvestidor = () => {\r\n        history.push('/editarInvestidores');\r\n    }\r\n\r\n    const handleDeletarInvestidor = () => {\r\n        setOpen(true)\r\n\r\n    }\r\n\r\n    const handleAgreed = () => {\r\n        setOpen(false);\r\n        dispatch(removerInvestidor(investidorSelecionado))\r\n        history.push('/gerenciarInvestidores');\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleVoltar=()=>{\r\n        history.push('/gerenciarInvestidores');\r\n    }\r\n    return (\r\n        <div className=\"investidoresMaisInfo\">\r\n            <div className=\"investidoresMaisInfoVoltar\" onClick={handleVoltar}><FaArrowLeft/> Voltar</div>\r\n            <div className=\"investidoresMaisInfoCard\">\r\n                <div className=\"investidoresMaisInfoHeader\">\r\n                    <Avatar sx={{ width: 86, height: 86, bgcolor: investidorSelecionado.color }}>\r\n                        {getNameToAvatar(investidorSelecionado.nome)} \r\n                    </Avatar>\r\n                    <Button variant=\"outlined\" fullWidth startIcon={<FaPen />} onClick={handleEditarInvestidor}> Editar </Button>\r\n                    <Button variant=\"outlined\" fullWidth startIcon={<FaTrashAlt />} onClick={handleDeletarInvestidor}> Excluir </Button>\r\n                </div>\r\n                <div className=\"investidoresMaisInfoBody\">\r\n                    <div className=\"investidoresMaisInfoPersonal\">\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            Nome: {investidorSelecionado.nome}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            e-mail: {investidorSelecionado.email}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            cel: {investidorSelecionado.telefone}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            Endereço: {investidorSelecionado.endereco}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className=\"investidoresMaisInfoUsina\">\r\n                        <Typography variant=\"body2\" component=\"div\" sx={{ color: '#7F8E9D;' }}>\r\n                            USINAS\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            Usina Solto Maior\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            Endereço: Ave. Palmares 123, São Francisco, RS\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"div\">\r\n                            Percentual de participação: {investidorSelecionado.usina.percentual}%\r\n                        </Typography>\r\n                       \r\n                    </div>\r\n\r\n                </div >\r\n            </div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {'Confirmação de deletar'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Deseja realmente excluir investidor?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>MELHOR NÃO</Button>\r\n                    <Button onClick={handleAgreed} autoFocus>SIM</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestidoresMaisInfo\r\n","import React from 'react';\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport {updateInvestidor,limparFiltro} from '../../Redux';\r\nimport { EditarOuCadastrarForm } from '../../Components';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport './EditarInvestidores.scss';\r\n\r\nfunction EditarInvestidores() {\r\n    const dispatch = useDispatch();\r\n    const {investidorSelecionado} = useSelector((state) => state.investidor)\r\n\r\n    const handleEditarInvestidor=(novoValor)=>{\r\n        dispatch(updateInvestidor(novoValor))\r\n    }\r\n      // sera utilizado somente se o filtro estiver ativo enquanto o usuario edita um investidor \r\n      const handleRemoverFiltro=()=>{\r\n        dispatch(limparFiltro())\r\n    }\r\n\r\n    return (\r\n        <div className=\"editarInvestidores\">\r\n             <Typography variant=\"body1\" component=\"div\" sx={{color:'#7F8E9D'}}>\r\n                    Atualizar informções do Investidor</Typography>\r\n            <EditarOuCadastrarForm   handleSave={handleEditarInvestidor} \r\n                                    investidor={investidorSelecionado}\r\n                                    handleRemoverFiltro={handleRemoverFiltro}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditarInvestidores\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {addInvestidor} from '../../Redux';\r\nimport { EditarOuCadastrarForm } from '../../Components';\r\nimport Typography from '@mui/material/Typography';\r\nimport './CadastrarInvestidor.scss'\r\n\r\nfunction CadastrarInvestidor() {\r\n    const dispatch = useDispatch();\r\n    const {} = useSelector((state) => state.investidor)\r\n\r\n    \r\n    const handleAddInvestidor =(novoInvestidor)=>{\r\n        dispatch(addInvestidor(novoInvestidor))\r\n    }\r\n\r\n    return (\r\n        <div className=\"cadastrarInvestidor\">\r\n            <Typography variant=\"body1\" component=\"div\" sx={{color:'#7F8E9D'}}>\r\n                    Cadastrar Novo Investidor</Typography>\r\n            <EditarOuCadastrarForm handleSave={handleAddInvestidor} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastrarInvestidor\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch,} from 'react-redux';\r\nimport { calcularEnergia,setUpVariables} from '../../Redux';\r\nimport { InvestidoresPercentual, GraficoRendimentos,GraficoTempoXRendimento } from '../../Components';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport './Rendimentos.scss'\r\n\r\nfunction Rendimentos() {\r\n    const dispatch = useDispatch();\r\n    const { investidores} = useSelector((state) => state.investidor)\r\n    const {rendimentos,receitaTotal,rendimentosPorhora} = useSelector((state) => state.usinaInfo)\r\n    const [toggleBtn, setToggleBtn] = useState(true)\r\n    const [btnText, setBtnText ] = useState('Ver rendimento por hora')\r\n    \r\n    useEffect(() => {\r\n        dispatch(setUpVariables()) //formata as variaveis para o estado inicial \r\n        dispatch(calcularEnergia(investidores))\r\n    }, [])\r\n\r\n    const onToggleBtn=()=>{\r\n        setToggleBtn(!toggleBtn)\r\n\r\n        if(!toggleBtn){\r\n            setBtnText('Ver rendimento por hora')\r\n        }else{\r\n            setBtnText('Ver rendimento por investidor')\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n    const formatarValorParaReal = new Intl.NumberFormat('pt-BR', {\r\n        style: 'currency',\r\n        currency: 'BRL',\r\n\r\n    });\r\n\r\n    const hoje = new Date();\r\n    const ontem = new Date();\r\n    ontem.setDate(hoje.getDate()-1)\r\n    const dataFormatacao= { year: 'numeric', month: 'long', day: 'numeric'}\r\n    \r\n    // Para rearanjar os investidores por ordem decrescente the percentual investido\r\n    const bblSort =()=>{\r\n        const items =[...investidores]\r\n        for(let i = 0; i < items.length; i++){\r\n            \r\n          // -1 porque o ultimo item ja esta na posicao correta \r\n          for(let j = 0; j < ( items.length - i -1 ); j++){\r\n     \r\n            //checkar se o item i eh menor que o proximo item\r\n            if(items[j].usina.percentual < items[j+1].usina.percentual){\r\n\r\n              // se sim, inverte as posicoes\r\n              let temp = items[j]\r\n              items[j]= items[j+1]\r\n              items[j+1] = temp\r\n            }\r\n          }\r\n        }\r\n        return items\r\n       }\r\n         \r\n\r\n\r\n    return (\r\n        <div className=\"rendimentos\">\r\n           <div  className=\"rendimentosHeader\">\r\n                <div>Balanço de ontem - {ontem.toLocaleString('pt-BR',dataFormatacao)}: </div>\r\n                <h3>{formatarValorParaReal.format(receitaTotal)}</h3>\r\n            </div> \r\n            <div className=\"rendimentosBody\">\r\n                <div className=\"rendimentosInvestidores\">\r\n                    <InvestidoresPercentual investidores={bblSort()} />\r\n                </div>\r\n                <div className=\"rendimentosGraficos\">\r\n                <div className=\"rendimentosBtn\">\r\n            <Button variant=\"contained\" onClick={onToggleBtn}>{btnText}</Button>\r\n                </div> \r\n                    {toggleBtn\r\n                        ?<GraficoRendimentos data={rendimentos}/>\r\n                        :<GraficoTempoXRendimento data={rendimentosPorhora}/>\r\n \r\n                    }\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rendimentos\r\n","import { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Navbar, Sidebar } from './Components';\r\nimport {\r\n  Usina,\r\n  GerenciarInvestidores,\r\n  InvestidoresMaisInfo,\r\n  EditarInvestidores,\r\n  CadastrarInvestidor,\r\n  Rendimentos\r\n} from './Pages';\r\nimport './App.scss';\r\n\r\n\r\nfunction App() {\r\n  const { investidorSelecionado } = useSelector((state) => state.investidor)\r\n  const [showSideBar, setShowSideBar] = useState(false);\r\n  const isMobile = useMediaQuery({ query: '(max-width: 650px)' })\r\n\r\n  let displaySidebar = null\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      setShowSideBar(false);\r\n    }\r\n  }, [isMobile])\r\n\r\n  if (isMobile && showSideBar) {\r\n    displaySidebar = <Sidebar />\r\n  }\r\n  else if (!isMobile) {\r\n    displaySidebar = <Sidebar />\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar displaySidebar={showSideBar} setSidebar={setShowSideBar} />\r\n        <div className=\"AppContainer\">\r\n\r\n          {displaySidebar}\r\n          <div className=\"AppScreens\">\r\n            <Switch>\r\n              <Route exact path='/' component={Usina} />\r\n              <Route exact path='/rendimentos' component={Rendimentos} />\r\n              <Route exact path='/gerenciarInvestidores' component={GerenciarInvestidores} />\r\n              <Route exact path='/cadastrarInvestidor' component={CadastrarInvestidor} />\r\n              {investidorSelecionado &&\r\n                 // Os routes abaixo so vai existir se um investidor estiver selecionado\r\n                <div>\r\n                  <Route exact path='/investidorInformacao' component={InvestidoresMaisInfo} />\r\n                  <Route exact path='/editarInvestidores' component={EditarInvestidores} />\r\n                </div>\r\n              }\r\n              <Route component={Usina} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </div>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from './Redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nimport { createTheme,ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n        main: '#33691e',\r\n    }\r\n  }});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n       <App />\r\n    </ThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}